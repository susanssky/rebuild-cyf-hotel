name: Week2 Coursework
# on: push
on:
  project:
    types: deleted
jobs:
  s3-deployment:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install packages and build
        working-directory: ./client
        run: |
          npm ci
          npm run build
      - uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-access-key-id: ${{ secrets.IAM_USER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.IAM_USER_SECRET_ACCESS_KEY }}
          aws-region: eu-west-2
      - name: Sync frontend files to S3
        run: aws s3 sync ./dist s3://${{ secrets.S3_BUCKET_NAME }} --delete
      # Thank you :)
      # - name: Remove existing files from AWS S3
      #   run: |
      #     aws s3 rm \
      #     s3://${{ secrets.S3_BUCKET_NAME }} \
      #     --recursive
      # - name: Copy files to the test website with the AWS CLI
      #   run: |
      #     aws s3 cp \
      #     ./dist s3://${{ secrets.S3_BUCKET_NAME }} \
      #     --recursive

  ec2-deployment:
    runs-on: ubuntu-latest
    steps:
      - name: login with ssh & stop pm2 & git pull & restart pm2
        env:
          PRIVATE_KEY: ${{ secrets.AWS_KEY_PAIR }}
          HOSTNAME: ${{ secrets.EC2_HOST_NAME }}
          # Because the IP address of an EC2 instance changes when it is stopped and then started again,
          # the value of a certain secret here must be manually updated.
          # Therefore, this job fail because I did not enable the EC2 instance and update the secret value.

          # In addition, this EC2 instance must have PM2 pre-installed and
          # the entire app's backend folder must have been git cloned.
          USER_NAME: ${{ secrets.EC2_USERNAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key
          chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${HOSTNAME} 'pm2 stop server && \
          cd ${{ toJSON(github.event.repository.name) }} && \
          git pull origin main && cd server && \
          npm i && cd && pm2 start server'
        # The above toJSON(github.event.repository.name) is to get the current repository name.
